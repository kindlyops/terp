load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("//:version.bzl", "VERSION")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")

# gazelle:prefix github.com/kindlyops/terp
# gazelle:exclude dummy.go
gazelle(
    name = "gazelle",
    external = "vendored",
)

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/kindlyops/terp",
    visibility = ["//visibility:private"],
    deps = ["//cmd:go_default_library"],
)

go_binary(
    name = "terp-linux",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:public"],
    x_defs = {
        "version": VERSION,
    },
)

go_binary(
    name = "terp-linux-arm",
    embed = [":go_default_library"],
    goarch = "arm64",
    goos = "linux",
    visibility = ["//visibility:public"],
    x_defs = {
        "version": VERSION,
    },
)

go_binary(
    name = "terp-darwin",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "darwin",
    visibility = ["//visibility:public"],
    x_defs = {
        "version": VERSION,
    },
)

go_binary(
    name = "terp-darwin-m1",
    embed = [":go_default_library"],
    goarch = "arm64",
    goos = "darwin",
    visibility = ["//visibility:public"],
    x_defs = {
        "version": VERSION,
    },
)

go_binary(
    name = "terp-windows",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "windows",
    visibility = ["//visibility:public"],
    x_defs = {
        "version": VERSION,
    },
)

alias(
    name = "terp",
    actual = select({
        "@io_bazel_rules_go//go/platform:linux_amd64": ":terp-linux",
        "@io_bazel_rules_go//go/platform:linux_arm64": ":terp-linux-arm",
        "@io_bazel_rules_go//go/platform:darwin_amd64": ":terp-darwin",
        "@io_bazel_rules_go//go/platform:darwin_arm64": ":terp-darwin-m1",
        "@io_bazel_rules_go//go/platform:windows_amd64": ":terp-windows",
        "//conditions:default": ":terp-linux",
    }),
)

copy_file(
    name = "install-darwin",
    src = "//:terp-darwin",
    out = "bdist/terp_darwin_amd64/terp",
)

copy_file(
    name = "install-darwin-m1",
    src = "//:terp-darwin-m1",
    out = "bdist/terp_darwin_arm64/terp",
)

copy_file(
    name = "install-linux",
    src = "//:terp-linux",
    out = "bdist/terp_linux_amd64/terp",
)

copy_file(
    name = "install-linux-arm",
    src = "//:terp-linux-arm",
    out = "bdist/terp_linux_arm64/terp",
)

copy_file(
    name = "install-windows",
    src = "//:terp-windows",
    out = "bdist/terp_windows_amd64/terp.exe",
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = ["main_test.go"],
    args = ["-cli"] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "$(location :terp-linux)",
        ],
        "@io_bazel_rules_go//go/platform:linux_arm64": [
            "$(location :terp-linux-arm)",
        ],
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            "$(location :terp-darwin)",
        ],
        "@io_bazel_rules_go//go/platform:darwin_arm64": [
            "$(location :terp-darwin-m1)",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "$(location :terp-windows)",
        ],
        "//conditions:default": ["update go_default_test args"],
    }),
    data = select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            ":terp-linux",
        ],
        "@io_bazel_rules_go//go/platform:linux_arm64": [
            ":terp-linux-arm",
        ],
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            ":terp-darwin",
        ],
        "@io_bazel_rules_go//go/platform:darwin_arm64": [
            ":terp-darwin-m1",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            ":terp-windows",
        ],
        "//conditions:default": [],
    }),
    rundir = ".",
    deps = ["//vendor/github.com/bazelbuild/rules_go/go/tools/bazel:go_default_library"],
)

sh_binary(
    name = "vendor",
    srcs = ["vendor.sh"],
    args = [
        "$(location @bazel_gazelle//cmd/gazelle)",
    ],
    data = [
        "@bazel_gazelle//cmd/gazelle",
        "@go_sdk//:files",
    ],
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "lint",
    srcs = ["lint.sh"],
    args = [
        "$(location @bazel_gazelle//cmd/gazelle)",
    ],
    data = [
        "@bazel_gazelle//cmd/gazelle",
        "@go_sdk//:files",
    ],
    tags = ["manual"],
    visibility = ["//visibility:public"],
)
